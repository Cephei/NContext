{"name":"NContext","tagline":"Application composition framework for .NET 4 & 4.5","body":"NContext\r\n========\r\nNContext is an application composition framework for .NET 4 & 4.5.\r\n\r\nThis project is an on-going architectural research effort. It borrows many\r\nideas, patterns, and concepts from a variety of software architects in the\r\nfield. NContext is unique and innovative in how it allows you to design your\r\napplication without tying it down to any specific technology or architectural\r\npattern.\r\n\r\nAt it's core, NContext introduces two fundamental concepts: dynamic application\r\ncomposition (bootstrapping) based upon MEF and IResponseTransferObject - a DTO\r\nwhich allows you to create a functionally composable application codebase. With \r\nit, the idea of Functional Domain Composition.\r\n\r\nIt also introduces new concepts in designing your bounded-contexts. With few\r\ncore dependencies, NContext's highly-extensible design allows for custom add-on\r\nmodules. Already built extensions include: Entity Framework, ASP.NET Web API & \r\nOWIN, AutoMapper, Value Injecter, and Logging. Some application components have \r\nbeen baked into NContext including: Caching, Security, Cryptography.\r\n\r\nNContext is dependency-injection container agnostic. Ninject and Unity support\r\nhas been added with the intentions of supporting all popular containers in the\r\nnear future.\r\n\r\nLicense\r\n-------\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014 Daniel Gioulakis, Waking Venture Inc.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n\r\nProject Management\r\n------------------\r\nFeel free to comment and vote on ideas or features you'd like to see incorporated\r\ninto NContext.\r\n\r\n**Trello:** *https://trello.com/b/xqQg5bfC*  \r\n\r\nContinuous Delivery\r\n-------------------\r\nCurrently, NContext is being deployed on-demand to reduce development costs. As new feature and bug fixes are brought into the framework and tested, the CI servers are spun-up and deployments are done from the following sites. Pre-release versions are currently deployed to official Nuget/Symbol Source servers. I don't recommend relying on these CI servers for any builds as they aren't live 24/7.\r\n\r\n**CI TeamCity Server:** *https://teamcity.wakingventure.com*  \r\n**CI NuGet Package Source:** *https://nuget.wakingventure.com*  \r\n**CI Symbol Source Server:** *http://symbolsource.wakingventure.com*  \r\n\r\nNContext versioning is still being determined. The core libraries (NContext.dll & \r\nNContext.Common.dll) will be released as 2.x.0. Ideally all extensions will be \r\nindependently versioned, however, the current build process does not reflect this. \r\nThis will be addressed in future builds as updating NuGet references is currently a \r\npain since each build packages a new NuGet release for every .nuspec.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}