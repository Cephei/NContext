<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NContext.Services</name>
    </assembly>
    <members>
        <member name="T:NContext.Application.Services.Formatters.XmlDataContractMediaTypeFormatter">
            <summary>
            Defines an Xml implementation of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> using <see cref="T:System.Runtime.Serialization.DataContractSerializer"/>.
            </summary>
        </member>
        <member name="M:NContext.Application.Services.Formatters.XmlDataContractMediaTypeFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NContext.Application.Services.Formatters.XmlDataContractMediaTypeFormatter"/> class.
            </summary>
        </member>
        <member name="M:NContext.Application.Services.Formatters.XmlDataContractMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)">
            <summary>
            Called when [read from stream].
            </summary>
            <param name="type">The type of object to deserialize.</param>
            <param name="stream">The stream.</param>
            <param name="httpContentHeaders">The HTTP content headers.</param>
            <returns>The de-serialized object.</returns>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Formatters.XmlDataContractMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)">
            <summary>
            Called to write an object to the <paramref name="stream"/>.
            </summary>
            <param name="type">The type of object to write.</param>
            <param name="value">The object instance to write.</param>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to which to write.</param>
            <param name="httpContentHeaders">The HTTP content headers.</param>
            <param name="context">The <see cref="T:System.Net.TransportContext"/>.</param>
            <remarks></remarks>
        </member>
        <member name="T:NContext.Application.Services.Authorization.OAuth2ResourceOwnerCredentialsAccessTokenRequest">
            <summary>
            Defines a class which can be used to help create an OAuth 2.0 access token 
            request following the resource owner credentials protocol flow.
            </summary>
            <remarks> 
            OAuth 2.0 Specification example:
            <para>
            POST /token HTTP/1.1
            Host: server.example.com
            Authorization: BASIC czZCaGRSa3F0MzpnWDFmQmF0M2JW
            Content-Type: application/x-www-form-urlencoded
            </para><para>
            grant_type=password&amp;client_id=s6BhdRkqt3&amp;username=johndoe&amp;password=A3ddj3w
            </para></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2ResourceOwnerCredentialsAccessTokenRequest.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NContext.Application.Services.Authorization.OAuth2ResourceOwnerCredentialsAccessTokenRequest"/> class.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="scopes">The scopes.</param>
            <param name="clientId">The client id.</param>
            <param name="clientSecret">The client secret.</param>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2ResourceOwnerCredentialsAccessTokenRequest.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NContext.Application.Services.Authorization.OAuth2ResourceOwnerCredentialsAccessTokenRequest"/> class.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="scope">The scope.</param>
            <param name="clientId">The client id.</param>
            <param name="clientSecret">The client secret.</param>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2ResourceOwnerCredentialsAccessTokenRequest.CreateRequest(System.String)">
            <summary>
            Creates a <see cref="T:System.Net.WebRequest"/> with the appropriate request parameters and headers.
            </summary>
            <param name="requestUri">The request URI.</param>
            <returns>The pre-configured <see cref="T:System.Net.WebRequest"/>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2ResourceOwnerCredentialsAccessTokenRequest.CreateRequest(System.Uri)">
            <summary>
            Creates a <see cref="T:System.Net.WebRequest"/> with the appropriate request parameters and headers.
            </summary>
            <param name="requestUri">The request URI.</param>
            <returns>The pre-configured <see cref="T:System.Net.WebRequest"/>.</returns>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2ResourceOwnerCredentialsAccessTokenRequest.ClientId">
            <summary>
            Gets the client id.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2ResourceOwnerCredentialsAccessTokenRequest.ClientSecret">
            <summary>
            Gets the client secret.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2ResourceOwnerCredentialsAccessTokenRequest.GrantType">
            <summary>
            Gets the type of the grant.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2ResourceOwnerCredentialsAccessTokenRequest.Password">
            <summary>
            Gets the password.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2ResourceOwnerCredentialsAccessTokenRequest.Scope">
            <summary>
            Gets the comma-delimited scopes.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2ResourceOwnerCredentialsAccessTokenRequest.UserName">
            <summary>
            Gets the name of the user.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:NContext.Application.Services.EndpointBinding">
            <summary>
            Defines an enumeration of service architecture types.
            </summary>
        </member>
        <member name="F:NContext.Application.Services.EndpointBinding.Rest">
            <summary>
            Represents a REST service binding.
            </summary>
        </member>
        <member name="F:NContext.Application.Services.EndpointBinding.Soap">
            <summary>
            Represents a SOAP service binding.
            </summary>
        </member>
        <member name="T:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationRequest">
            <summary>
            Defines an OAuth 2.0 service authorization request for authorization code flow.
            </summary>
            <remarks><para>
            Defines a class which can be used to help create an OAuth 2.0 authorization request following
            the authorization code protocol flow.
            </para></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationRequest.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the <see cref="T:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationRequest"/> is reclaimed by garbage collection.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationRequest.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationRequest.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposeManagedResources"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationRequest.ClientId">
            <summary>
            Gets the client identifier.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationRequest.RedirectUri">
            <summary>
            Gets the redirect URI.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationRequest.ResponseType">
            <summary>
            Gets the type of the response.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationRequest.Scope">
            <summary>
            Gets the comma-delimited scopes.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationRequest.State">
            <summary>
            Gets the the exact value received from the client.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationError">
            <summary>
            Defines a class which can be used to help create an OAuth 2.0 authorization error 
            for an authorization code request as defined by the specification.
            </summary>
            <remarks><para>
            This class should only be used to help create the error uri.
            </para></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationError.#ctor(System.Uri,NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationError.AuthorizationCodeError,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationError"/> class.
            </summary>
            <param name="requestUri">The request URI.</param>
            <param name="error">The error.</param>
            <param name="errorDescription">The error description.</param>
            <param name="errorUri">The error URI.</param>
            <param name="state">The state.</param>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationError.#ctor(System.String,NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationError.AuthorizationCodeError,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationError"/> class.
            </summary>
            <param name="requestUri">The request URI.</param>
            <param name="error">The error.</param>
            <param name="errorDescription">The error description.</param>
            <param name="errorUri">The error URI.</param>
            <param name="state">The state.</param>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationError.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationError.Error">
            <summary>
            Gets the error.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationError.ErrorDescription">
            <summary>
            Gets a human-readable text providing additional information, used to assist in 
            the understanding and resolution of the error occurred. [[ add language and encoding information]]
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationError.ErrorUri">
            <summary>
            Gets a URI identifying a human-readable web page with information about the error, used to provide 
            the resource owner with additional information about the error.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationError.State">
            <summary>
            Gets the the exact value received from the client.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationError.AuthorizationCodeError">
            <summary>
            A single error code representing why the authorization request failed.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationError.AuthorizationCodeError.InvalidRequest">
            <summary>
            The request is missing a required parameter, includes an unsupported parameter or parameter value, or is otherwise malformed.
            </summary>
        </member>
        <member name="F:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationError.AuthorizationCodeError.UnauthorizedClient">
            <summary>
            The client is not authorized to request an authorization code using this method.
            </summary>
        </member>
        <member name="F:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationError.AuthorizationCodeError.AccessDenied">
            <summary>
            The resource owner or authorization server denied the request.
            </summary>
        </member>
        <member name="F:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationError.AuthorizationCodeError.UnsupportedResponseType">
            <summary>
            The authorization server does not support obtaining an authorization code using this method.
            </summary>
        </member>
        <member name="F:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationError.AuthorizationCodeError.InvalidScope">
            <summary>
            The requested scope is invalid, unknown, or malformed. A 4xx or 5xx HTTP status code (except for 400 and 401)
            The authorization server MAY set the "error" parameter value to a numerical HTTP status code from the 4xx or 5xx
            range, with the exception of the 400 (Bad Request) and 401 (Unauthorized) status codes.  For example, if the
            service is temporarily unavailable, the authorization server MAY return an error response with "error" set to 
            "503".
            </summary>
        </member>
        <member name="T:NContext.Application.Services.Authorization.OAuth2AccessTokenError">
            <summary>
            Defines a class which represents an OAuth 2.0 Access Token request error.
            </summary>
            <remarks><para>
            </para></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2AccessTokenError.#ctor(NContext.Application.Services.Authorization.OAuth2AccessTokenError.AccessTokenError,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NContext.Application.Services.Authorization.OAuth2AccessTokenError"/> class.
            </summary>
            <param name="error">The <see cref="T:NContext.Application.Services.Authorization.OAuth2AccessTokenError.AccessTokenError"/>.</param>
            <param name="description">The error description.</param>
            <param name="uri">The error URI.</param>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2AccessTokenError.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. 
                            </param><param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization. 
                            </param><exception cref="T:System.Security.SecurityException">The caller does not have the required permission. 
            </exception>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AccessTokenError.Error">
            <summary>
            Gets the error which represents why the request failed.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AccessTokenError.Description">
            <summary>
            Gets the human-readable text providing additional information, used to assist in the 
            understanding and resolution of the error occurred.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AccessTokenError.Uri">
            <summary>
            Gets the URI identifying a human-readable web page with information about the error, 
            used to provide the resource owner with additional information about the error.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:NContext.Application.Services.Authorization.OAuth2AccessTokenError.AccessTokenError">
            <summary>
            A single error code which represents why the request failed.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:NContext.Application.Services.Authorization.OAuth2AccessTokenError.AccessTokenError.InvalidClient">
            <summary>
            Client authentication failed (e.g. unknown client, no client credentials included, multiple 
            client credentials included, or unsupported credentials type).  The authorization server 
            MAY return an HTTP 401 (Unauthorized) status code to indicate which HTTP authentication 
            schemes are supported.  If the client attempted to authenticate via the "Authorization" 
            request header field, the authorization server MUST respond with an HTTP 401 (Unauthorized) 
            status code, and include the "WWW-Authenticate" response header field matching the 
            authentication scheme used by the client.
            </summary>
        </member>
        <member name="F:NContext.Application.Services.Authorization.OAuth2AccessTokenError.AccessTokenError.InvalidRequest">
            <summary>
            The request is missing a required parameter, includes an unsupported parameter 
            or parameter value, repeats a parameter, includes multiple credentials, 
            utilizes more than one mechanism for authenticating the client, or is otherwise malformed.
            </summary>
        </member>
        <member name="F:NContext.Application.Services.Authorization.OAuth2AccessTokenError.AccessTokenError.InvalidGrant">
            <summary>
            The provided authorization grant is invalid, expired, revoked, does not match the redirection 
            URI used in the authorization request, or was issued to another client.
            </summary>
        </member>
        <member name="F:NContext.Application.Services.Authorization.OAuth2AccessTokenError.AccessTokenError.InvalidScope">
            <summary>
            The requested scope is invalid, unknown, malformed, or exceeds the scope granted by the resource owner.
            </summary>
        </member>
        <member name="F:NContext.Application.Services.Authorization.OAuth2AccessTokenError.AccessTokenError.UnauthorizedClient">
            <summary>
            The authenticated client is not authorized to use this authorization grant type.
            </summary>
        </member>
        <member name="F:NContext.Application.Services.Authorization.OAuth2AccessTokenError.AccessTokenError.UnsupportedGrantType">
            <summary>
            The authorization grant type is not supported by the authorization server.
            </summary>
        </member>
        <member name="T:NContext.Application.Services.Routing.IRunWhenAServiceRouteIsCreated">
            <summary>
            Defines a role-interface which allows implementors to run when a <see cref="!:Service"/>
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Reverb.PowerDms.Application.Services.Authorization.IOAuth2AccessToken">
            <summary>
            
            </summary>
        </member>
        <member name="P:Reverb.PowerDms.Application.Services.Authorization.IOAuth2AccessToken.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Reverb.PowerDms.Application.Services.Authorization.IOAuth2AccessToken.Type">
            <summary>
            Gets the type.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Reverb.PowerDms.Application.Services.Authorization.IOAuth2AccessToken.ExpiresIn">
            <summary>
            Gets the expires.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Reverb.PowerDms.Application.Services.Authorization.IOAuth2AccessToken.RefreshToken">
            <summary>
            Gets the refresh token.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Reverb.PowerDms.Application.Services.Authorization.IOAuth2AccessToken.Scope">
            <summary>
            Gets the scope.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:NContext.Application.Services.Formatters.JsonNetMediaTypeFormatter">
            <summary>
            Defines a Json <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> using Json.NET serialization/deserialization.
            </summary>
        </member>
        <member name="M:NContext.Application.Services.Formatters.JsonNetMediaTypeFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NContext.Application.Services.Formatters.JsonNetMediaTypeFormatter"/> class.
            </summary>
        </member>
        <member name="M:NContext.Application.Services.Formatters.JsonNetMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)">
            <summary>
            Called when [read from stream].
            </summary>
            <param name="type">The type of object to deserialize.</param>
            <param name="stream">The stream.</param>
            <param name="httpContentHeaders">The HTTP content headers.</param>
            <returns>The de-serialized object.</returns>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Formatters.JsonNetMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)">
            <summary>
            Called to write an object to the <paramref name="stream"/>.
            </summary>
            <param name="type">The type of object to write.</param>
            <param name="value">The object instance to write.</param>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to which to write.</param>
            <param name="httpContentHeaders">The HTTP content headers.</param>
            <param name="context">The <see cref="T:System.Net.TransportContext"/>.</param>
            <remarks></remarks>
        </member>
        <member name="T:NContext.Application.Services.Routing.IConfigureServiceRoutes">
            <summary>
            Defines a role-interface used by the <see cref="T:NContext.Application.Services.Routing.IRoutingManager"/> to register service routes.
            </summary>
        </member>
        <member name="M:NContext.Application.Services.Routing.IConfigureServiceRoutes.RegisterServiceRoutes(NContext.Application.Services.Routing.IRoutingManager)">
            <summary>
            Creates the WCF service routes.
            </summary>
            <param name="routingManager">The routing manager.</param>
        </member>
        <member name="T:NContext.Application.Services.Routing.Route">
            <summary>
            Defines a class which represents a WCF service route.
            </summary>
        </member>
        <member name="M:NContext.Application.Services.Routing.Route.#ctor(System.String,System.Type,System.Type,NContext.Application.Services.EndpointBinding)">
            <summary>
            Initializes a new instance of the <see cref="T:NContext.Application.Services.Routing.Route"/> class.
            </summary>
            <param name="routePrefix">The route prefix.</param>
            <param name="serviceContractType">Type of the service contract.</param>
            <param name="serviceType">Type of the service.</param>
            <param name="binding">The binding.</param>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Routing.Route.Binding">
            <summary>
            Gets the binding.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Routing.Route.RoutePrefix">
            <summary>
            Gets the route prefix.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Routing.Route.ServiceContractType">
            <summary>
            Gets the type of the service contract.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Routing.Route.ServiceType">
            <summary>
            Gets the type of the service.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:NContext.Application.Services.Authorization.OAuth2ClientCredentialsAccessTokenRequest">
            <summary>
            Defines a class which can be used to help create an OAuth 2.0 access token 
            request following the client credentials protocol flow.
            </summary>
            <remarks> 
            OAuth 2.0 Specification example:
            <para>
            POST /token HTTP/1.1
            Host: server.example.com
            Authorization: BASIC czZCaGRSa3F0MzpnWDFmQmF0M2JW
            Content-Type: application/x-www-form-urlencoded
            </para><para>
            grant_type=client_credentials&amp;client_id=s6BhdRkqt3&amp;
            </para></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2ClientCredentialsAccessTokenRequest.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:NContext.Application.Services.Authorization.OAuth2ClientCredentialsAccessTokenRequest"/> class.
            </summary>
            <param name="clientId">The client id.</param>
            <param name="clientSecret">The client secret.</param>
            <param name="scopes">The scopes.</param>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2ClientCredentialsAccessTokenRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NContext.Application.Services.Authorization.OAuth2ClientCredentialsAccessTokenRequest"/> class.
            </summary>
            <param name="clientId">The client id.</param>
            <param name="clientSecret">The client secret.</param>
            <param name="scope">The scope.</param>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2ClientCredentialsAccessTokenRequest.CreateRequest(System.String)">
            <summary>
            Creates a <see cref="T:System.Net.WebRequest"/> with the appropriate request parameters and headers.
            </summary>
            <param name="requestUri">The request URI.</param>
            <returns>The pre-configured <see cref="T:System.Net.WebRequest"/>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2ClientCredentialsAccessTokenRequest.CreateRequest(System.Uri)">
            <summary>
            Creates a <see cref="T:System.Net.WebRequest"/> with the appropriate request parameters and headers.
            </summary>
            <param name="requestUri">The request URI.</param>
            <returns>The pre-configured <see cref="T:System.Net.WebRequest"/>.</returns>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2ClientCredentialsAccessTokenRequest.GrantType">
            <summary>
            Gets the type of the grant.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2ClientCredentialsAccessTokenRequest.ClientId">
            <summary>
            Gets the client identifier.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2ClientCredentialsAccessTokenRequest.ClientSecret">
            <summary>
            Gets the client secret.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2ClientCredentialsAccessTokenRequest.Scope">
            <summary>
            Gets the comma-delimited scopes.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:NContext.Application.Services.Routing.RoutingConfiguration">
            <summary>
            Defines a component configuration class for service routing.
            </summary>
        </member>
        <member name="M:NContext.Application.Services.Routing.RoutingConfiguration.#ctor(NContext.Application.Configuration.ApplicationConfigurationBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:NContext.Application.Configuration.ApplicationComponentConfigurationBase"/> class.
            </summary>
            <param name="applicationConfigurationBuilder">The application configuration.</param>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Routing.RoutingConfiguration.SetEndpointBindings(NContext.Application.Services.EndpointBinding)">
            <summary>
            Sets the WCF supported endpoint bindings. You 
            may use the | operator to allow multiple bindings.
            </summary>
            <param name="endpointBindings">The endpoint bindings.</param>
            <returns>This <see cref="T:NContext.Application.Services.Routing.RoutingConfiguration"/> instance.</returns>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Routing.RoutingConfiguration.SetMessageHandlerFactory(System.Func{System.Collections.Generic.IEnumerable{System.Net.Http.DelegatingHandler}})">
            <summary>
            Sets the message handler factory.
            </summary>
            <param name="factory">The factory.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Routing.RoutingConfiguration.SetResourceFactory(System.Func{System.Type,System.ServiceModel.InstanceContext,System.Net.Http.HttpRequestMessage,System.Object})">
            <summary>
            Sets the resource factory.
            </summary>
            <param name="getInstance">The get instance.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Routing.RoutingConfiguration.Setup">
            <summary>
            Applies the component configuration with the <see cref="T:NContext.Application.Configuration.IApplicationConfiguration"/>.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Routing.RoutingConfiguration.EndpointBinding">
            <summary>
            Gets the endpoint bindings.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Routing.RoutingConfiguration.ResourceFactory">
            <summary>
            Gets the resource resolver.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Routing.RoutingConfiguration.MessageHandlerFactory">
            <summary>
            Gets the HTTP message handler factory func.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationGrant">
            <summary>
            Defines a class which can be used to help create an OAuth 2.0 authorization grant 
            following the authorization code protocol flow.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationGrant.#ctor(System.Uri,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationGrant"/> class.
            </summary>
            <param name="requestUri">The request URI.</param>
            <param name="authorizationCode">The authorization code.</param>
            <param name="state">The state.</param>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationGrant.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationGrant"/> class.
            </summary>
            <param name="requestUri">The request URI.</param>
            <param name="authorizationCode">The authorization code.</param>
            <param name="state">The state.</param>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationGrant.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationGrant.AuthorizationCode">
            <summary>
            Gets the authorization code.
            </summary>
            <remarks><para>
            OAuth 2.0 Authorization Protocol - draft-ietf-oauth-v2-16
            REQUIRED.  The authorization code generated by the 
            authorization server.  The authorization code SHOULD expire 
            shortly after it is issued to minimize the risk of leaks.  The 
            client MUST NOT reuse the authorization code.  If an 
            authorization code is used more than once, the authorization 
            server MAY revoke all tokens previously issued based on that 
            authorization code.  The authorization code is bound to the 
            client identifier and redirection URI.
            </para></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAuthorizationGrant.State">
            <summary>
            Gets the the exact value received from the client.
            </summary>
            <remarks><para>
            REQUIRED if the "state" parameter was present in the client 
            authorization request.  Set to the exact value received from 
            the client.
            </para></remarks>
        </member>
        <member name="T:NContext.Application.Services.Routing.RoutingManager">
            <summary>
            Defines an application-level manager for configuring WCF service routes.
            </summary>
        </member>
        <member name="T:NContext.Application.Services.Routing.IRoutingManager">
            <summary>
            Defines interface contract which encapsulates logic for creating WCF service routes.
            </summary>
        </member>
        <member name="M:NContext.Application.Services.Routing.IRoutingManager.RegisterServiceRoute``2(System.String)">
            <summary>
            Registers a service route.
            </summary>
            <typeparam name="TServiceContract">The type of the service contract.</typeparam>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="routePrefix">The route prefix.</param>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Routing.RoutingManager.#ctor(NContext.Application.Services.Routing.RoutingConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:NContext.Application.Services.Routing.RoutingManager"/> class.
            Prevents a default instance of the <see cref="T:NContext.Application.Services.Routing.RoutingManager"/> class from being created.
            </summary>
            <param name="routingConfiguration">The routing configuration.</param>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Routing.RoutingManager.RegisterServiceRoute``2(System.String)">
            <summary>
            Registers the service route.
            </summary>
            <typeparam name="TServiceContract">The type of the service contract.</typeparam>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="routePrefix">The route prefix.</param>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Routing.RoutingManager.CreateRoutes">
            <summary>
            Registers the routes in the routing table.
            </summary>
        </member>
        <member name="M:NContext.Application.Services.Routing.RoutingManager.Configure(NContext.Application.Configuration.IApplicationConfiguration)">
            <summary>
            Configures the component instance.
            </summary>
            <param name="applicationConfiguration">The application configuration.</param>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Routing.RoutingManager.IsConfigured">
            <summary>
            Gets a value indicating whether this instance is configured.
            </summary>
            <value>
                <c>true</c> if this instance is configured; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:NContext.Application.Services.Routing.RoutingManager.ServiceRoutes">
            <summary>
            Gets the routes.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAccessTokenRequest">
            <summary>
            Defines a class which can be used to help create an OAuth 2.0 access token 
            request following the authorization code protocol flow.
            </summary>
            <remarks><para>
            </para></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAccessTokenRequest.#ctor(System.String,System.Uri,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAccessTokenRequest"/> class.
            </summary>
            <param name="code">The authorization code received from the authorization server.</param>
            <param name="redirectUri">The redirection URI used by the authorization server to return the authorization response in the previous step.</param>
            <param name="clientId">The client identifier.</param>
            <param name="clientSecret">The client secret.</param>
            <remarks></remarks>
        </member>
        <member name="M:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAccessTokenRequest.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAccessTokenRequest"/> class.
            </summary>
            <param name="code">The authorization code received from the authorization server.</param>
            <param name="redirectUri">The redirection URI used by the authorization server to return the authorization response in the previous step.</param>
            <param name="clientId">The client identifier.</param>
            <param name="clientSecret">The client secret.</param>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAccessTokenRequest.GrantType">
            <summary>
            Gets the type of the grant.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAccessTokenRequest.Code">
            <summary>
            Gets the authorization code received from the authorization server.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAccessTokenRequest.RedirectUri">
            <summary>
            Gets the redirection URI used by the authorization server to return the authorization response in the previous step.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAccessTokenRequest.ClientId">
            <summary>
            Gets the client identifier.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:NContext.Application.Services.Authorization.OAuth2AuthorizationCodeAccessTokenRequest.ClientSecret">
            <summary>
            Gets the client secret.
            </summary>
            <remarks></remarks>
        </member>
    </members>
</doc>
