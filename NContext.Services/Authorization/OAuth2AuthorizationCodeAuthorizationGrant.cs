// --------------------------------------------------------------------------------------------------------------------
// <copyright file="OAuth2AuthorizationCodeAuthorizationGrant.cs">
//   This file is part of NContext.
//
//   NContext is free software: you can redistribute it and/or modify
//   it under the terms of the GNU General Public License as published by
//   the Free Software Foundation, either version 3 of the License, or any later version.
//
//   NContext is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
//
//   You should have received a copy of the GNU General Public License
//   along with NContext.  If not, see <http://www.gnu.org/licenses/>.
// </copyright>

// <summary>
//   Defines a class which can be used to help create an OAuth 2.0 authorization grant 
//   following the authorization code protocol flow.
// </summary>
// --------------------------------------------------------------------------------------------------------------------

using System;
using System.Net;
using System.Text;
using System.Web;

namespace NContext.Application.Services.Authorization
{
    /// <summary>
    /// Defines a class which can be used to help create an OAuth 2.0 authorization grant 
    /// following the authorization code protocol flow.
    /// </summary>
    /// <remarks></remarks>
    public sealed class OAuth2AuthorizationCodeAuthorizationGrant
    {
        #region Fields
        
        private readonly String _RequestUri;

        #endregion

        #region Constructors

        /// <summary>
        /// Initializes a new instance of the <see cref="OAuth2AuthorizationCodeAuthorizationGrant"/> class.
        /// </summary>
        /// <param name="requestUri">The request URI.</param>
        /// <param name="authorizationCode">The authorization code.</param>
        /// <param name="state">The state.</param>
        /// <remarks></remarks>
        public OAuth2AuthorizationCodeAuthorizationGrant(Uri requestUri, String authorizationCode, String state)
            : this(requestUri.ToString(), authorizationCode, state)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="OAuth2AuthorizationCodeAuthorizationGrant"/> class.
        /// </summary>
        /// <param name="requestUri">The request URI.</param>
        /// <param name="authorizationCode">The authorization code.</param>
        /// <param name="state">The state.</param>
        /// <remarks></remarks>
        public OAuth2AuthorizationCodeAuthorizationGrant(String requestUri, String authorizationCode, String state)
        {
            _RequestUri = requestUri;
            AuthorizationCode = authorizationCode;
            State = state;
        }

        #endregion

        #region Properties

        /// <summary>
        /// Gets the authorization code.
        /// </summary>
        /// <remarks><para>
        /// OAuth 2.0 Authorization Protocol - draft-ietf-oauth-v2-16
        /// REQUIRED.  The authorization code generated by the 
        /// authorization server.  The authorization code SHOULD expire 
        /// shortly after it is issued to minimize the risk of leaks.  The 
        /// client MUST NOT reuse the authorization code.  If an 
        /// authorization code is used more than once, the authorization 
        /// server MAY revoke all tokens previously issued based on that 
        /// authorization code.  The authorization code is bound to the 
        /// client identifier and redirection URI.
        /// </para></remarks>
        public String AuthorizationCode { get; private set; }

        /// <summary>
        /// Gets the the exact value received from the client.
        /// </summary>
        /// <remarks><para>
        /// REQUIRED if the "state" parameter was present in the client 
        /// authorization request.  Set to the exact value received from 
        /// the client.
        /// </para></remarks>
        public String State { get; private set; }

        #endregion

        #region Methods

        /// <summary>
        /// Returns a <see cref="System.String"/> that represents this instance.
        /// </summary>
        /// <returns>A <see cref="System.String"/> that represents this instance.</returns>
        /// <remarks></remarks>
        public override String ToString()
        {
            var requestBuilder = new StringBuilder(String.Format("{0}?code={1}", _RequestUri, HttpUtility.UrlEncode(AuthorizationCode)));
            if (!String.IsNullOrWhiteSpace(State))
            {
                requestBuilder.Append(String.Format("&state={0}", HttpUtility.UrlEncode(State)));
            }

            return requestBuilder.ToString();
        }

        #endregion
    }
}